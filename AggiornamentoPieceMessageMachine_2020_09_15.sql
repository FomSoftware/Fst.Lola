/*
Deployment script for LOLA

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "LOLA"
:setvar DefaultFilePrefix "LOLA"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Altering [dbo].[HistoryPiece]...';


GO
ALTER TABLE [dbo].[HistoryPiece] DROP COLUMN [ElapsedTimeAnuba];


GO
PRINT N'Altering [dbo].[MessageMachine]...';


GO
ALTER TABLE [dbo].[MessageMachine] DROP COLUMN [IsPeriodicMsg];


GO
PRINT N'Altering [dbo].[ParameterMachine]...';


GO
ALTER TABLE [dbo].[ParameterMachine] DROP COLUMN [ThresholdMax], COLUMN [ThresholdMin];


GO
PRINT N'Altering [dbo].[Piece]...';


GO
ALTER TABLE [dbo].[Piece] DROP COLUMN [ElapsedTimeAnuba];


GO
PRINT N'Altering [api].[usp_HistoricizingPieces]...';


GO
-- =============================================
-- Author:		Marco Servillo, Alten Italia
-- Create date:	2018-01-31
-- Description:	Storicizzazione giornaliera tabella Piece
-- =============================================
ALTER PROCEDURE [api].[usp_HistoricizingPieces](@machineId INT)
AS
         BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
             SET NOCOUNT ON;

     -- Insert statements for procedure here
             DECLARE @date DATETIME;
	    
/**/

             SELECT @date = isnull(MAX(Day), 0)
             FROM [HistoryPiece]
             WHERE MachineId = @machineId;
    
/* DAY AGGREGATION */

             MERGE [dbo].[HistoryPiece] AS target
             USING
(
    SELECT SUM(IIF(isRedone = 0, 1, 0)) AS CompletedCount,
		   CAST(Day AS DATE) AS Day,
           SUM(ElapsedTime) AS ElapsedTime,
           SUM(ElapsedTimeProducing) AS ElapsedTimeProducing,
           SUM(ElapsedTimeCut) AS ElapsedTimeCut,
           SUM(ElapsedTimeWorking) AS ElapsedTimeWorking,
           SUM(ElapsedTimeTrim) AS ElapsedTimeTrim,
           MachineId,
           Operator,
           (DATEPART(year, CAST(Day AS DATE)) * 10000) + (DATEPART(month, CAST(Day AS DATE)) * 100) + DATEPART(day, CAST(Day AS DATE)) AS Period,   
		    SUM(IIF(isRedone = 0, Length, 0)) AS PieceLengthSum,
		   SUM(IIF(isRedone = 1, 1, 0)) AS RedoneCount,
           Shift,
           'd' AS TypeHistory
    FROM dbo.Piece
    WHERE CAST(Day AS DATE) >= @date
          AND MachineId = @machineId
    GROUP BY CAST(Day AS DATE),
             MachineId,
             CUBE(Operator, Shift)
) AS source
             ON target.Day = source.Day
                AND target.MachineId = source.MachineId
                AND (target.Operator = source.Operator
                     OR (target.Operator IS NULL
                         AND source.Operator IS NULL))
                AND (target.Shift = source.Shift
                     OR (target.Shift IS NULL
                         AND source.Shift IS NULL))
                AND target.TypeHistory = source.TypeHistory
                 WHEN MATCHED
                 THEN UPDATE SET
                                 target.CompletedCount = source.CompletedCount,
								 target.ElapsedTime = source.ElapsedTime,
                                 target.ElapsedTimeProducing = source.ElapsedTimeProducing,
                                 target.ElapsedTimeCut = source.ElapsedTimeCut,
                                 target.ElapsedTimeWorking = source.ElapsedTimeWorking,
                                 target.ElapsedTimeTrim = source.ElapsedTimeTrim,
								 target.PieceLengthSum = source.PieceLengthSum,
								 target.RedoneCount = source.RedoneCount
                 WHEN NOT MATCHED BY TARGET
                 THEN
                   INSERT(CompletedCount,
						  Day,
                          ElapsedTime,
                          ElapsedTimeProducing,
                          ElapsedTimeCut,
                          ElapsedTimeWorking,
                          ElapsedTimeTrim,
                          MachineId,
                          Operator,
                          Period,  
						  PieceLengthSum,
						  RedoneCount,
                          Shift,
                          TypeHistory)
                   VALUES
(CompletedCount,
 Day,
 ElapsedTime,
 ElapsedTimeProducing,
 ElapsedTimeCut,
 ElapsedTimeWorking,
 ElapsedTimeTrim,
 MachineId,
 Operator,
 Period,
 PieceLengthSum,
 RedoneCount,
 Shift,
 TypeHistory
);

/**/

         END;
GO
PRINT N'Altering [dbo].[usp_AggregationPiece]...';


GO
-- =============================================
-- Author:		Marco Servillo, Alten Italia
-- Create date:	2018-02-06
-- Description:	Aggregati day/week/month/quarter/year tabella Piece
-- =============================================
ALTER PROCEDURE [dbo].[usp_AggregationPiece] @machineId   INT,
                                             @startDate   DATETIME,
                                             @endDate     DATETIME,
                                             @aggregation INT      = 0,
                                             @dataType    INT      = 0
AS
         BEGIN

/************************************************************/

/************************ WORKAROUND ************************/

/************************************************************/

--             SET FMTONLY OFF;
--             CREATE TABLE #TempRisultato
--([Id]                   [INT] NOT NULL,
-- [CompletedCount]       [INT] NULL,
-- [Day]                  [DATETIME] NULL,
-- [ElapsedTime]          [BIGINT] NULL,
-- [ElapsedTimeProducing] [BIGINT] NULL,
-- [ElapsedTimeCut]       [BIGINT] NULL,
-- [ElapsedTimeWorking]   [BIGINT] NULL,
-- [ElapsedTimeTrim]      [BIGINT] NULL,
-- [MachineId]            [INT] NULL,
-- [Operator]             [VARCHAR](100) NULL,
-- [Period]               [INT] NULL,
-- [PieceLengthSum]       [INT] NULL,
-- [RedoneCount]          [INT] NULL,
-- [Shift]                [INT] NULL,
-- [System]               [VARCHAR](100) NULL,
-- [TypeHistory]          [CHAR](1) NULL,
--);

--/**/

--             SELECT *
--             FROM #TempRisultato;
/*********************************************************/

/************************ DEFAULT ************************/

/*********************************************************/

             SET NOCOUNT ON;
		   
/***********************************************************************/

/************************ DASHBOARD AGGREGATION ************************/

/***********************************************************************/

             IF @dataType = 0
                 BEGIN
			  
/**/

                     SELECT MAX(Id) AS Id,
                            SUM(CompletedCount) AS CompletedCount,
                            MAX(Day) AS Day,
                            SUM(ElapsedTime) AS ElapsedTime,
                            SUM(ElapsedTimeProducing) AS ElapsedTimeProducing,
                            SUM(ElapsedTimeCut) AS ElapsedTimeCut,
                            SUM(ElapsedTimeWorking) AS ElapsedTimeWorking,
                            SUM(ElapsedTimeTrim) AS ElapsedTimeTrim,                        
                            MachineId,
                            Operator,
                            NULL AS Period,
                            SUM(PieceLengthSum) AS PieceLengthSum,
                            SUM(RedoneCount) AS RedoneCount,
                            Shift,
							System,
                            'd' AS TypeHistory
                     FROM dbo.[HistoryPiece]
                     WHERE Day BETWEEN @startDate AND @endDate
                           AND MachineId = @machineId
                           AND Shift IS NULL
                           AND Operator IS NULL
                     GROUP BY MachineId,
                              Operator,
                              Shift,
							  System;
						
/**/

                 END;
                 ELSE
		   
/*********************************************************************/

/************************ HISTORY AGGREGATION ************************/

/*********************************************************************/

             IF @dataType = 1
                 BEGIN
			  
/*****************************************************************/

/************************ DAY AGGREGATION ************************/

/*****************************************************************/

                     IF @aggregation = 0
                         BEGIN
			  
/**/

                             SELECT a.[Id],
                                    [CompletedCount],
                                    [Day],
                                    [ElapsedTime],
                                    [ElapsedTimeProducing],
                                    [ElapsedTimeCut],
                                    [ElapsedTimeWorking],
                                    [ElapsedTimeTrim],
                                    [MachineId],
                                    [Operator],
                                    [Period],
                                    [PieceLengthSum],
                                    [RedoneCount],
                                    [Shift],
									[System],
                                    [TypeHistory]
                             FROM [dbo].[HistoryPiece] a
                             WHERE Day BETWEEN @startDate AND @endDate
                                   AND MachineId = @machineId
                                   AND Shift IS NULL
                                   AND Operator IS NULL;
			  
/**/

                         END;
                         ELSE
		   
/******************************************************************/

/************************ WEEK AGGREGATION ************************/

/******************************************************************/

                     IF @aggregation = 1
                         BEGIN
			  
/**/

                             SELECT MAX(Id) AS Id,
                                    SUM(CompletedCount) AS CompletedCount,
                                    MAX(Day) AS Day,
                                    SUM(ElapsedTime) AS ElapsedTime,
                                    SUM(ElapsedTimeProducing) AS ElapsedTimeProducing,
                                    SUM(ElapsedTimeCut) AS ElapsedTimeCut,
                                    SUM(ElapsedTimeWorking) AS ElapsedTimeWorking,
                                    SUM(ElapsedTimeTrim) AS ElapsedTimeTrim,
                                    MachineId,
                                    Operator,
                                    (DATEPART(YEAR, Day) * 100) + DATEPART(ISO_WEEK, Day) AS Period,
                                    SUM(PieceLengthSum) AS PieceLengthSum,
                                    SUM(RedoneCount) AS RedoneCount,
                                    Shift,
									System,
                                    'w' AS TypeHistory
                             FROM dbo.[HistoryPiece]
                             WHERE Day BETWEEN @startDate AND @endDate
                                   AND MachineId = @machineId
                                   AND Shift IS NULL
                                   AND Operator IS NULL
                             GROUP BY(DATEPART(YEAR, Day) * 100) + DATEPART(ISO_WEEK, Day),
                                     MachineId,
                                     Operator,
                                     Shift,
									 System;
						
/**/

                         END;
                         ELSE
		   
/*******************************************************************/

/************************ MONTH AGGREGATION ************************/

/*******************************************************************/

                     IF @aggregation = 2
                         BEGIN
			  
/**/

                             SELECT MAX(Id) AS Id,
                                    SUM(CompletedCount) AS CompletedCount,
                                    MAX(Day) AS Day,
                                    SUM(ElapsedTime) AS ElapsedTime,
                                    SUM(ElapsedTimeProducing) AS ElapsedTimeProducing,
                                    SUM(ElapsedTimeCut) AS ElapsedTimeCut,
                                    SUM(ElapsedTimeWorking) AS ElapsedTimeWorking,
                                    SUM(ElapsedTimeTrim) AS ElapsedTimeTrim,
                                    MachineId,
                                    Operator,
                                    (DATEPART(YEAR, Day) * 100) + DATEPART(MONTH, Day) AS Period,
                                    SUM(PieceLengthSum) AS PieceLengthSum,
                                    SUM(RedoneCount) AS RedoneCount,
                                    Shift,
									System,
                                    'm' AS TypeHistory
                             FROM dbo.[HistoryPiece]
                             WHERE Day BETWEEN @startDate AND @endDate
                                   AND MachineId = @machineId
                                   AND Shift IS NULL
                                   AND Operator IS NULL
                             GROUP BY(DATEPART(YEAR, Day) * 100) + DATEPART(MONTH, Day),
                                     MachineId,
                                     Operator,
                                     Shift,
									 System;
			  
/**/

                         END;
                         ELSE
		   
/*********************************************************************/

/************************ QUARTER AGGREGATION ************************/

/*********************************************************************/

                     IF @aggregation = 3
                         BEGIN
			  
/**/

                             SELECT MAX(Id) AS Id,
                                    SUM(CompletedCount) AS CompletedCount,
                                    MAX(Day) AS Day,
                                    SUM(ElapsedTime) AS ElapsedTime,
                                    SUM(ElapsedTimeProducing) AS ElapsedTimeProducing,
                                    SUM(ElapsedTimeCut) AS ElapsedTimeCut,
                                    SUM(ElapsedTimeWorking) AS ElapsedTimeWorking,
                                    SUM(ElapsedTimeTrim) AS ElapsedTimeTrim,
                                    MachineId,
                                    Operator,
                                    (DATEPART(YEAR, Day) * 100) + DATEPART(QUARTER, Day) AS Period,
                                    SUM(PieceLengthSum) AS PieceLengthSum,
                                    SUM(RedoneCount) AS RedoneCount,
                                    Shift,
									System,
                                    'q' AS TypeHistory
                             FROM dbo.[HistoryPiece]
                             WHERE Day BETWEEN @startDate AND @endDate
                                   AND MachineId = @machineId
                                   AND Shift IS NULL
                                   AND Operator IS NULL
                             GROUP BY(DATEPART(YEAR, Day) * 100) + DATEPART(QUARTER, Day),
                                     MachineId,
                                     Operator,
                                     Shift,
									 System;
			  
/**/

                         END;
                         ELSE
		   
/******************************************************************/

/************************ YEAR AGGREGATION ************************/

/******************************************************************/

                     IF @aggregation = 4
                         BEGIN
			  
/**/

                             SELECT MAX(Id) AS Id,
                                    SUM(CompletedCount) AS CompletedCount,
                                    MAX(Day) AS Day,
                                    SUM(ElapsedTime) AS ElapsedTime,
                                    SUM(ElapsedTimeProducing) AS ElapsedTimeProducing,
                                    SUM(ElapsedTimeCut) AS ElapsedTimeCut,
                                    SUM(ElapsedTimeWorking) AS ElapsedTimeWorking,
                                    SUM(ElapsedTimeTrim) AS ElapsedTimeTrim,
                                    MachineId,
                                    Operator,
                                    DATEPART(YEAR, Day) AS Period,
                                    SUM(PieceLengthSum) AS PieceLengthSum,
                                    SUM(RedoneCount) AS RedoneCount,
                                    Shift,
									System,
                                    'y' AS TypeHistory
                             FROM dbo.[HistoryPiece]
                             WHERE Day BETWEEN @startDate AND @endDate
                                   AND MachineId = @machineId
                                   AND Shift IS NULL
                                   AND Operator IS NULL
                             GROUP BY DATEPART(YEAR, Day),
                                      MachineId,
                                      Operator,
                                      Shift,
									  System;
			  
/**/

                         END;
                 END;
                 ELSE
		   
/*******************************************************************************/

/************************ OPERATOR OR SHIFT AGGREGATION ************************/

/*******************************************************************************/

             IF @dataType = 2
                OR @dataType = 3
                 BEGIN

/**/

                     SELECT MAX(Id) AS Id,
                            SUM(CompletedCount) AS CompletedCount,
                            MAX(Day) AS Day,
                            SUM(ElapsedTime) AS ElapsedTime,
                            SUM(ElapsedTimeProducing) AS ElapsedTimeProducing,
                            SUM(ElapsedTimeCut) AS ElapsedTimeCut,
                            SUM(ElapsedTimeWorking) AS ElapsedTimeWorking,
                            SUM(ElapsedTimeTrim) AS ElapsedTimeTrim,
                            MachineId,
                            Operator,
                            NULL AS Period,
                            SUM(PieceLengthSum) AS PieceLengthSum,
                            SUM(RedoneCount) AS RedoneCount,
                            Shift,
							System,
                            'd' AS TypeHistory
                     FROM dbo.[HistoryPiece]
                     WHERE Day BETWEEN @startDate AND @endDate
                           AND MachineId = @machineId
                           AND ((@dataType = 2
                                 AND Shift IS NULL
                                 AND Operator IS NOT NULL)
                                OR (@dataType = 3
                                    AND Shift IS NOT NULL
                                    AND Operator IS NULL))
                     GROUP BY MachineId,
                              Operator,
                              Shift,
							  System;
						
/**/

                 END;
         END;
GO
PRINT N'Refreshing [dbo].[usp_CleanMachineData]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[usp_CleanMachineData]';


GO
PRINT N'Refreshing [log].[usp_UpdateAllRecordsDemo]...';


GO
EXECUTE sp_refreshsqlmodule N'[log].[usp_UpdateAllRecordsDemo]';


GO
PRINT N'Refreshing [log].[usp_UpdateDateMes]...';


GO
EXECUTE sp_refreshsqlmodule N'[log].[usp_UpdateDateMes]';


GO
PRINT N'Refreshing [api].[usp_HistoricizingMessages]...';


GO
EXECUTE sp_refreshsqlmodule N'[api].[usp_HistoricizingMessages]';


GO
PRINT N'Refreshing [api].[usp_HistoricizingAll]...';


GO
EXECUTE sp_refreshsqlmodule N'[api].[usp_HistoricizingAll]';


GO
PRINT N'Update complete.';


GO
